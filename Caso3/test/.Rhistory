--
>___-
"
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
ymd_hms(dt1)
hms("03:22:14")
dt2
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
skip()
this_moment
this_moment
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- depart + hours(15) + minutes(50)
with_tz(arrive, "Asia/Hong_Kong")
arrive <_ with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
arrive
mdy("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
interval(last_time:arrive)
interval(last_time, arrive)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch(
)
DT = data.table(x=rep(letter[1:3], each=100))
y = rnorm(100)
setkey(DT, x)
DT['a']
library(data.table)
library(data.table)
DT = data.table(x=rep(letter[1:3], each=100))
y = rnorm(100)
setkey(DT, x)
library(data.table)
DT = data.table(x=rep(letter[1:3], each=100),
y = rnorm(100))
setkey(DT, x)
DT['a']
DF = data.frame(x=rnorm(9), y=rep(c("a", "b", "c"), each=3), z=rnorm(9))
head(DF, 3)
DT = data.table(x=rep(letter[1:3], each=100), y = rnorm(100))
DT = data.table(x=rep(letters[1:3], each=100), y = rnorm(100))
setkey(DT, x)
DT['a']
DT1 = data.table(x=c('a', 'a', 'b', 'dt1'), y=1:4)
DT2 = data.table(x=c('a', 'b', 'dt2'), z=5:7)
setkey(DT1, x); setkey(DT2, x)
merge(DT1, DT2)
set.seed(1)
df_gde = data.frame(x=rnorm(1E6), y=rnorm(1E6))
file = tempfile()
write.table(df_gde, file=file, row.names=F, col.names=T, SEP="\t", quote=F)
system.time(fread(file))
system.time(read.table(file, header=T, sep="\t"))
set.seed(1)
df_gde = data.frame(x=rnorm(1E6), y=rnorm(1E6))
file = tempfile()
write.table(df_gde, file=file, row.names=F, col.names=T, SEP="\t", quote=F)
set.seed(1)
df_gde = data.frame(x=rnorm(1E6), y=rnorm(1E6))
file = tempfile()
write.table(df_gde, file=file, row.names=F, col.names=T, sep="\t", quote=F)
system.time(fread(file))
system.time(read.table(file, header=T, sep="\t"))
set.seed(1)
df_gde = data.frame(x=rnorm(1E6), y=rnorm(1E6))
file = tempfile()
write.table(df_gde, file=file, row.names=F, col.names=T, sep="\t", quote=F)
system.time(fread(file))
system.time(read.table(file, header=T, sep="\t"))
?write.table
rnorm(1E6)
set.seed(1)
df_gde = data.frame(x=rnorm(1E6), y=rnorm(1E6))
file = tempfile()
write.table(df_gde, file=file, row.names=F, col.names=T, sep="\t", quote=F)
system.time(fread(file))
system.time(read.table(file, header=T, sep="\t"))
install.packages("RMySQL")
ucscDb = dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb); result
install.packages("RMySQL")
ucscDb = dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb); result
hg19 = dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
tablas = dbListTables(hg19)
length(tablas)
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A
library(MySQL)
library("MySQL")
library("RMySQL")
ucscDb = dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb); result
hg19 = dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
tablas = dbListTables(hg19)
length(tablas)
dbListFields(hg19, "affyU133plus2")
dbGetQuery(hg19, "select count(*) from affyU133plus2")
affyData = dbReadTable(hg19, "affyU133plus2")
head(affyData)
query = dbSendQuery(hg19, "select * from affyU133plus2 where misMatches between 1 and 3")
affyMis = fetch(query); quantile(affyMis$misMatches)
affyMisSmall = fetch(query, n=10); dbClearResult(query)
hg19 = dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
tablas = dbListTables(hg19)
length(tablas)
dbListFields(hg19, "affyU133plus2")
dbGetQuery(hg19, "select count(*) from affyU133plus2")
affyData = dbReadTable(hg19, "affyU133plus2")
head(affyData)
query = dbSendQuery(hg19, "select * from affyU133plus2 where misMatches between 1 and 3")
affyMis = fetch(query); quantile(affyMis$misMatches)
affyMisSmall = fetch(query, n=10); dbClearResult(query)
ucscDb = dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb); result
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A
dbGetQuery(hg19, "select count(*) from affyU133plus2")
db.host=genome-mysql.cse.ucsc.edu
db.user=genomep
db.password=password
central.db=hgcentral
central.host=genome-mysql.cse.ucsc.edu
central.user=genomep
central.password=password
dbListFields(hg19, "affyU133plus2")
dbDisconnect(hg19)
ucscDb = dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb); result
hg19 = dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
tablas = dbListTables(hg19)
length(tablas)
dbListFields(hg19, "affyU133plus2")
#Clase
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
x
set.seed(13435)
x = data.frame("var1"=sample(1:5). "var2"=sample(6:10), var3=sample(11:15))
set.seed(13435)
x = data.frame("var1"=sample(1:5). "var2"=sample(6:10), var3=sample(11:15))
set.seed(13435)
x = data.frame("var1"=sample(1:5), "var2"=sample(6:10), var3=sample(11:15))
x
x = x[sample(1:5),]
x
x$var2[c(1,3)]=NA
X
x
set.seed(13435)
x = data.frame("var1"=sample(1:5), "var2"=sample(6:10), var3=sample(11:15))
x = x[sample(1:5),]
x$var2[c(1,3)]=NA
x[,1]
x[,"var1"]
x$var2[c(1,2)]
x[1:2, "var2"]
x
subset(x, x$var1<=3 & x$var3>11)
x[x$var1<=3 & x$var3>11]
x[x$var1<=3 & x$var3>11,]
x[x$var1<=3 || x$var3>11,]
x[x$var1<=3 | x$var3>11,]
?&
&
:&
?"&"
which(x$var > 8)
set.seed(13435)
x = data.frame("var1"=sample(1:5), "var2"=sample(6:10), var3=sample(11:15))
x = x[sample(1:5),]
x$var2[c(1,3)]=NA
x[,1]
x[,"var1"]
x$var2[c(1,2)]
x[1:2, "var2"]
x
subset(x, x$var1<=3 & x$var3>11)
x[x$var1<=3 & x$var3>11,]
x[x$var1<=3 | x$var3>11,]
which(x$var > 8)
which(x$var > B)
which(x$var > 8)
which(x$var2 > 8)
x[which(x$var2>8),]
sort(x$var1)
sort(x$var1, decreasing = T)
?sort
sort(x$var1)
order(x$var1)
?order
x[order(x$var1), ]
x[order(x$var2, na.last=F, decreasing = T), ]
library(plyr)
arrange(x, var1)
arrange(x, desc(var1))
if(!dir.exists("data")){dir.create("data")}
url = "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(url, "./data/restaurantes.csv")
head(data, n=3)
summary(data)
datastr(data)
head(data, n=3)
summary(data)
datastr(data)
if(!dir.exists("data")){dir.create("data")}
url = "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(url, "./data/restaurantes.csv")
data = read.csv("./data/restaurantes.csv")
head(data, n=3)
summary(data)
datastr(data)
str(data)
download.packages("YieldCurve")
download.packages("Yieldcurve")
download.packages(YieldCurve)
download.packages("YieldCurve")
download.packages("Yield Curve")
download.packages("Yieldcurve")
download.packages("Yield curve")
install.packages("YieldCurve")
library("yieldCurve")
library("YieldCurve")
require(xts)
require(xts)
require(YieldCurve)
data(FedYieldCurve)
first(FedYieldCurve,'3 month')
mat.Fed<-c(3/12, 0.5, 1,2,3,5,7,10)
par(mfrow=c(2,3))
for( i in c(1,2,3,370,371,372) ){
plot(mat.Fed, FedYieldCurve[i,], type="o", xlab="Maturities structure in years", ylab="Interest rates values")
title(main=paste("Federal Reserve yield curve observed at",
time(FedYieldCurve[i], sep=" ") ))
grid()
}
persp(1982:2012,maturity,FedYieldCurve[seq(2,nrow(FedYieldCurve),by=12),],
theta=30,xlab="Year",ylab="Maturity (in years)",
zlab="Interest rates (in %)",ticktype = "detailed",shade=.2,expand=.3)
reserva = read.csv("C:\Users\Aaron\Downloads\FRB_H15.csv")
require(xts)
require(YieldCurve)
data(reserva)
first(reserva,'3 month')
reserva = read.csv("C:/Users/Aaron/Downloads/FRB_H15.csv")
require(xts)
require(YieldCurve)
data(reserva)
first(reserva,'3 month')
reserva = read.csv("C:/Users/Aaron/Downloads/FRB_H15.csv")
require(xts)
require(YieldCurve)
data(reserva)
data(FedYieldCurve)
tau <- c(3, 6, 12, 60, 84, 120)
mediumTerm <- c(12,60,84)
NSParameters <- Nelson.Siegel( rate=FedYieldCurve[1:10,],
maturity=tau, MidTau=mediumTerm )
y <- NSrates(NSParameters[5,1:3],
NSParameters$lambda[5],tau)
plot(tau,FedYieldCurve[5,],main="Fitting Nelson-Siegel yield curve", type="o")
lines(tau,y, col=2)
legend("topleft",legend=c("observed yield curve","fitted yield curve"),
col=c(1,2),lty=1)
grid()
?Nelson.Siegel
data(FedYieldCurve)
tau <- c(3, 6, 12, 60, 84, 120)
mediumTerm <- c(12,60,84)
NSParameters <- Nelson.Siegel( rate=FedYieldCurve[1:10,],
maturity=tau)
y <- NSrates(NSParameters[5,1:3],
NSParameters$lambda[5],tau)
plot(tau,FedYieldCurve[5,],main="Fitting Nelson-Siegel yield curve", type="o")
lines(tau,y, col=2)
legend("topleft",legend=c("observed yield curve","fitted yield curve"),
col=c(1,2),lty=1)
grid()
tm <- c(c(1, 3, 6, 9) / 12, 1:10)  ## in years
param <- c(6, 3, 8, 1)
yM <- NS(param, tm)
plot(tm, yM, xlab = "maturity in years",
ylab = "yield in percent")
param <- c(6, 3, 5, -5, 1, 3)
yM <- NSS(param, tm)
plot(tm, yM, xlab = "maturity in years",
ylab = "yield in percent")
reserva = read.csv("C:/Users/Aaron/Downloads/FRB_H15.csv")
View(reserva)
View(reserva)
colnames(reserva) <- "ZeroRate"
plot(x = reserva[, "ZeroRate"], xlab = "Time", ylab = "Zero Rate",
main = "Market Zero Rates 2014-05-14", ylim = c(0.0, 0.06),
major.ticks= "years", minor.ticks = FALSE, col = "red")
reserva
reserva[4,]
reserva[,4]
reserva[1,4]
hola = reserva[1:4, ]
hola = reserva[1:4, ]
hola
hola = reserva[4:14, ]
hola
hola = reserva[6:12, ]
hola
colnames(hola) <- "ZeroRate"
plot(x = hola[, "ZeroRate"], xlab = "Time", ylab = "Zero Rate",
main = "Market Zero Rates 2014-05-14", ylim = c(0.0, 0.06),
major.ticks= "years", minor.ticks = FALSE, col = "red")
hola = reserva[6:12, ]
hola1 = as.xts(hola)
hola1
reserva = read.csv("C:/Users/Aaron/Downloads/FRB_H15.csv")
hola = reserva[6:12, ]
hola1 = as.xts(hola)
hola
hola = reserva[7:12, ]
hola
hola =  as.data.frame(reserva[7:12, ])
hola\
hola
?as.data.frame
hola =  as.data.frame(reserva[7:12, ], row.names = 1)
hola =  as.data.frame(reserva[7:12, ], row.names = "1")
if(!dir.exists("data")){dir.create("data")}
url = "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(url, "./data/restaurantes.csv")
data = read.csv("./data/restaurantes.csv")
head(data, n=3)
summary(data)
str(data)
quantile(data$councilDistrict, na.rm=T)
table(data$zipCode, useNA = "ifany")
table(data$councilDistrict, data$zipCode)
sum(is.na(data$councilDistrict))
any(is.na(data$councilDistrict))
all(!is.na(data$councilDistrict))
all(data$zipCode > 0)
colSums(is.na(data))
all( colSums(is.na(data)) == 0 )
?colSums
all( colSums(is.na(data)) = 0 )
all( colSums(is.na(data)) == 0 )
all(0)
table(data$zipCode %in% c("21212"))
table(data$zipCode %in% c("21212", "21213"))
data[data$zipCode %in% c("21212", "21213"), ]
data(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt = xtabs(Freq ~ Gender + Admit, data=DF)
xt
warpbreaks$replicate = rep(1:9, len=54)
xt = xtabs(breaks ~., data=warpbreaks)
xt
summary(warpbreaks)
summary(xt)
ftable(xt)
fakeData = rnorm(1e5)
object.size(fakeData)
Print(object.size(fakeData), units="Mb")
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData), units="Mb")
s1 = seq(1,10, by=2); s1
s2 = seq(1,10, by=3); s2
x = c(1,3,8,25,100); seq(along=x)
data$cerca = data$neighborhood %in% c("Roland Park", "Homeland")
table(data$cerca)
head(data)
dat$zipError = ifelse(data$zipCode <0, TRUE, FALSE)
data[data$zipError, ]
table(data$zipError, data$zipCode < 0)
data$zipError = ifelse(data$zipCode <0, TRUE, FALSE)
data[data$zipError, ]
table(data$zipError, data$zipCode < 0)
data$zipError = ifelse(data$zipCode <0, TRUE, FALSE)
data[data$zipError, ]
table(data$zipError, data$zipCode < 0)
data$zipGrupo = cut(data$zipCode, breaks = quantile(data$zipCode))
table(data$zipGrupo)
table(data$zipGrupo, data$zipCode)
install.packages("Hmisc")
library(Hmisc)
data%zipGrupo = cut2(data$zipCode, g=4)
table(data$zipGrupo)
data$zipGrupo = cut2(data$zipCode, g=4)
table(data$zipGrupo)
data$zcf = factor(data$zipCode)
data$zcf[1:10]
class(data$zcf)
data$zipCode[1:10]
class(data$zipCode)
set.seed(1)
yesno = sample(c("si", "no"), size=10, replace=T)
yesnofac = factor(yesno, levels = c("si", "no"))
yesnofac
relevel(yesnofac, ref="no")
as.numeric(yesnofac)
as.numeric(relevel(yesnofac, ref="no"))
?mutate
library(plyr)
?mutate
library(Hmisc); library(plyr)
data2 = mutate(data, zipGrupo = cut2(zipCode, g=4))
table(data2$zipGrupo)
data2
?signif\
?signif
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3")
x1 = list.files(pattern = "features.*\\.txt")
DF <- lapply(x1, read.table, header=F)
DF
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3")
x1 = list.files(pattern = "features.*\\.txt")
DF <- lapply(x1, read.table, header=F)
DF
x1 = list.files(pattern = "features.*\\.txt")
DF <- lapply(x1, read.table, header=T)
DF
x1
x1 = read.table("~/features.txt")
x1 = read.table("/features.txt")
x1 = read.table("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/features.txt")
x1
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files <- list.files(path="~/Caso3/.", pattern=".txt")
DF <- NULL
for (f in files) {
dat <- read.csv(f, header=F, sep="\t", na.strings="", colClasses="character")
dat$file <- unlist(strsplit(f,split=".",fixed=T))[1]
DF <- rbind(DF, dat)
}
DF
files <- list.files(path="~/Caso3/.", pattern=".txt")
DF <- NULL
for (f in files) {
dat <- read.table(f, header=F, sep="\t", na.strings="", colClasses="character")
dat$file <- unlist(strsplit(f,split=".",fixed=T))[1]
DF <- rbind(DF, dat)
}
DF
files
files <- list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3", pattern=".txt")
files
files <- list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3", pattern=".txt")
DF <- NULL
for (f in files) {
dat <- read.table(f, header=F, sep="\t", na.strings="", colClasses="character")
dat$file <- unlist(strsplit(f,split=".",fixed=T))[1]
DF <- rbind(DF, dat)
}
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3")
files <- list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3", pattern=".txt")
DF <- NULL
for (f in files) {
dat <- read.table(f, header=F, sep="\t", na.strings="", colClasses="character")
dat$file <- unlist(strsplit(f,split=".",fixed=T))[1]
DF <- rbind(DF, dat)
}
DF
View(DF)
View(DF)
files <- list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
DF <- NULL
for (f in files) {
dat <- read.table(f, header=F, sep="\t", na.strings="", colClasses="character")
dat$file <- unlist(strsplit(f,split=".",fixed=T))[1]
DF <- rbind(DF, dat)
}
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test")
files <- list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
DF <- NULL
for (f in files) {
dat <- read.table(f, header=F, sep="\t", na.strings="", colClasses="character")
dat$file <- unlist(strsplit(f,split=".",fixed=T))[1]
DF <- rbind(DF, dat)
}
DF
View(DF)
View(DF)
