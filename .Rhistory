## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
#Get the proper indexes for the means and stdevs
features <- read.table("./data/features.txt")
meanStdIndex <- grep("mean\\(\\)|std\\(\\)", features[, 2])
#Only keep data from mean or stdev
MergedX <- MergedX[, meanStdIndex]
#Correct the headers display so it removes '()', and '-' and change the functions to UpperCase
names(MergedX) <- gsub("\\(\\)", "", features[meanStdIndex, 2]) # remove "()"
names(MergedX) <- gsub("mean", "Mean", names(MergedX)) # m to UpperCase
names(MergedX) <- gsub("std", "Std", names(MergedX)) # s to UpperCase
names(MergedX) <- gsub("-", "", names(MergedX)) # remove "-" in column names
#Delete variables that will not be used in the future
rm(features); rm(meanStdIndex)
## 3. Uses descriptive activity names to name the activities in the data set
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2])) #Change names to LowerCase
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8)) #Change Upstairs
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8)) #Change Downstairs
MergedY[, 1] <- activity[MergedY[, 1], 2]
names(MergedY) <- "activity"
# 4. Appropriately labels the data set with descriptive variable names.
names(MergedS) <- "subject"
cleanedData <- cbind(MergedS, MergedY, MergedX)
#Delete variables that will not be used in the future
rm(MergedX); rm(MergedY);
# 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
#The dimmensions of the data set depend on the size of MergedS, activity and cleanedData
SLen <- length(table(MergedS))
activityLen <- dim(activity)[1]
colLen <- dim(cleanedData)[2]
result <- as.data.frame(matrix(NA, nrow=SLen*activityLen, ncol=colLen))
colnames(result) <- colnames(cleanedData)
k <- 1
for(i in 1:SLen) {
for(j in 1:activityLen) {
#Put subject number (this will be repeated one time for each activity)
result[k, 1] <- sort(unique(MergedS)[, 1])[i]
#Put activity (every activity will be assigned once for each subject)
result[k, 2] <- activity[j, 2]
# Take the data for the subject
bool1 <- i == cleanedData$subject
# Take the activity to be analized
bool2 <- activity[j, 2] == cleanedData$activity
# Take all the information for a specific activity and subject, calculate the mean
result[k, 3:colLen] <- colMeans(cleanedData[bool1&bool2, 3:colLen])
k <- k + 1
#In the end we will have k-1 observations in the data set
}
}
#Delete variables that will not be used in the future
rm(activity); rm(MergedS); rm(SLen); rm(activityLen)
rm(bool1); rm(bool2); rm(colLen); rm(i); rm(j)
#This is going to create the txt file with the data set
write.table(result, "tidy_data_step5.txt", row.name=FALSE) # Creates the txt file requested
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
#Get the TRAINing data
Xtrain <- read.table("./data/train/X_train.txt")
Ytrain <- read.table("./data/train/y_train.txt")
Strain <- read.table("./data/train/subject_train.txt")
#Get the TEST data
Xtest <- read.table("./data/test/X_test.txt")
Ytest <- read.table("./data/test/y_test.txt")
Stest <- read.table("./data/test/subject_test.txt")
#Merge them together
MergedX <- rbind(Xtrain, Xtest)
MergedY <- rbind(Ytrain, Ytest)
MergedS <- rbind(Strain, Stest)
#Delete variables that will not be used in the future
rm(Xtrain); rm(Ytrain); rm(Strain)
rm(Xtest); rm(Ytest); rm(Stest)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
#Get the proper indexes for the means and stdevs
features <- read.table("./data/features.txt")
meanStdIndex <- grep("mean\\(\\)|std\\(\\)", features[, 2])
#Only keep data from mean or stdev
MergedX <- MergedX[, meanStdIndex]
#Correct the headers display so it removes '()', and '-' and change the functions to UpperCase
names(MergedX) <- gsub("\\(\\)", "", features[meanStdIndex, 2]) # remove "()"
names(MergedX) <- gsub("mean", "Mean", names(MergedX)) # m to UpperCase
names(MergedX) <- gsub("std", "Std", names(MergedX)) # s to UpperCase
names(MergedX) <- gsub("-", "", names(MergedX)) # remove "-" in column names
#Delete variables that will not be used in the future
rm(features); rm(meanStdIndex)
## 3. Uses descriptive activity names to name the activities in the data set
activity <- read.table("./data/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2])) #Change names to LowerCase
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8)) #Change Upstairs
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8)) #Change Downstairs
MergedY[, 1] <- activity[MergedY[, 1], 2]
names(MergedY) <- "activity"
# 4. Appropriately labels the data set with descriptive variable names.
names(MergedS) <- "subject"
cleanedData <- cbind(MergedS, MergedY, MergedX)
#Delete variables that will not be used in the future
rm(MergedX); rm(MergedY);
# 5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
#The dimmensions of the data set depend on the size of MergedS, activity and cleanedData
SLen <- length(table(MergedS))
activityLen <- dim(activity)[1]
colLen <- dim(cleanedData)[2]
result <- as.data.frame(matrix(NA, nrow=SLen*activityLen, ncol=colLen))
colnames(result) <- colnames(cleanedData)
k <- 1
for(i in 1:SLen) {
for(j in 1:activityLen) {
#Put subject number (this will be repeated one time for each activity)
result[k, 1] <- sort(unique(MergedS)[, 1])[i]
#Put activity (every activity will be assigned once for each subject)
result[k, 2] <- activity[j, 2]
# Take the data for the subject
bool1 <- i == cleanedData$subject
# Take the activity to be analized
bool2 <- activity[j, 2] == cleanedData$activity
# Take all the information for a specific activity and subject, calculate the mean
result[k, 3:colLen] <- colMeans(cleanedData[bool1&bool2, 3:colLen])
k <- k + 1
#In the end we will have k-1 observations in the data set
}
}
#Delete variables that will not be used in the future
rm(activity); rm(MergedS); rm(SLen); rm(activityLen)
rm(bool1); rm(bool2); rm(colLen); rm(i); rm(j)
#This is going to create the txt file with the data set
write.table(result, "tidy_data_step5.txt", row.name=FALSE) # Creates the txt file requested
#data <- read.table("./tidy_data_step5.txt",header=TRUE) to load the data just created
View(cleanedData)
View(result)
View(cleanedData)
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"), read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"), read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"), read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"), read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"), read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"), read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
View(Juntarx)
View(Juntarx)
View(cleanedData)
View(Juntarx)
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
data <-rbind(read.table("~/UCI HAR Dataset/train/X_train.txt"),read.table("~/UCI HAR Dataset/test/x_test.txt"))
actividades <- rbind(read.table("~/UCI HAR Dataset/train/y_train.txt"),read.table("~/UCI HAR Dataset/test/y_test.txt"))[,1]
encabezados <- read.table("~/UCI HAR Dataset/features.txt")
labels <- as.character(read.table("~/UCI HAR Dataset/activity_labels.txt")[,2])
voluntarios <- rbind(read.table("~/UCI HAR Dataset/train/subject_train.txt"),read.table("~/UCI HAR Dataset/test/subject_test.txt"))[,1]
colnames(data) <- encabezados$V2
medidas <- grepl('-(mean|std)\\(',encabezados$V2)
data <- data[medidas]
actividades <- labels[actividades]
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
colnames(data) <- gsub("t", "Time", colnames(data))
colnames(data) <- gsub("f", "Frequency", colnames(data))
colnames(data) <- gsub("\\(\\)", "", colnames(data))
colnames(data) <- gsub("-", "", colnames(data))
colnames(data) <- gsub("BodyBody", "Body", colnames(data))
colnames(data) <- gsub("^", "MeanOf", colnames(data))
data <- cbind(Voluntario = voluntarios,Actividad = actividades,data)
data <-rbind(read.table("./Caso3/train/X_train.txt"),read.table("./Caso3/test/x_test.txt"))
actividades <- rbind(read.table("./Caso3/train/y_train.txt"),read.table("./Caso3/test/y_test.txt"))[,1]
encabezados <- read.table("./Caso3/features.txt")
labels <- as.character(read.table("./Caso3/activity_labels.txt")[,2])
voluntarios <- rbind(read.table("./Caso3/train/subject_train.txt"),read.table("./Caso3/test/subject_test.txt"))[,1]
colnames(data) <- encabezados$V2
medidas <- grepl('-(mean|std)\\(',encabezados$V2)
data <- data[medidas]
actividades <- labels[actividades]
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
colnames(data) <- gsub("t", "Time", colnames(data))
colnames(data) <- gsub("f", "Frequency", colnames(data))
colnames(data) <- gsub("\\(\\)", "", colnames(data))
colnames(data) <- gsub("-", "", colnames(data))
colnames(data) <- gsub("BodyBody", "Body", colnames(data))
colnames(data) <- gsub("^", "MeanOf", colnames(data))
data <- cbind(Voluntario = voluntarios,Actividad = actividades,data)
View(data)
View(cleanedData)
View(data)
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"), read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"), read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"), read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
data <-rbind(read.table("./Caso3/train/X_train.txt"),read.table("./Caso3/test/x_test.txt"))
actividades <- rbind(read.table("./Caso3/train/y_train.txt"),read.table("./Caso3/test/y_test.txt"))[,1]
encabezados <- read.table("./Caso3/features.txt")
labels <- as.character(read.table("./Caso3/activity_labels.txt")[,2])
voluntarios <- rbind(read.table("./Caso3/train/subject_train.txt"),read.table("./Caso3/test/subject_test.txt"))[,1]
colnames(data) <- encabezados$V2
medidas <- grepl('-(mean|std)\\(',encabezados$V2)
data <- data[medidas]
actividades <- labels[actividades]
View(data)
colnames(data) <- gsub("mean", "Mean", colnames(data))
View(data)
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
View(data)
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
colnames(data) <- gsub("t", "Time", colnames(data))
colnames(data) <- gsub("f", "Frequency", colnames(data))
View(data)
colnames(data) <- gsub("f", "Frequency", colnames(data))
colnames(data) <- gsub("\\(\\)", "", colnames(data))
View(data)
colnames(data) <- gsub("\\(\\)", "", colnames(data))
colnames(data) <- gsub("-", "", colnames(data))
colnames(data) <- gsub("BodyBody", "Body", colnames(data))
colnames(data) <- gsub("^", "MeanOf", colnames(data))
View(data)
data <- cbind(Voluntario = voluntarios,Actividad = actividades,data)
View(data)
View(Juntarx)
data <-rbind(read.table("./Caso3/train/X_train.txt"),read.table("./Caso3/test/x_test.txt"))
actividades <- rbind(read.table("./Caso3/train/y_train.txt"),read.table("./Caso3/test/y_test.txt"))[,1]
encabezados <- read.table("./Caso3/features.txt")
labels <- as.character(read.table("./Caso3/activity_labels.txt")[,2])
voluntarios <- rbind(read.table("./Caso3/train/subject_train.txt"),read.table("./Caso3/test/subject_test.txt"))[,1]
colnames(data) <- encabezados$V2
medidas <- grepl('-(mean|std)\\(',encabezados$V2)
data <- data[medidas]
actividades <- labels[actividades]
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"), read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"), read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"), read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
#Parte4) Etiquetas apropiadas
View(Juntarx)
View(data)
View(Juntarx)
Juntary
colnames(Juntarx) <- Titulo$V2
#Parte2) Solo media y desviacion std
colnames(Juntarx) <- Titulo$V2
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
#Parte4) Etiquetas apropiadas
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"), read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"), read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"), read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
colnames(Juntarx) <- Titulo$V2
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
#Parte4) Etiquetas apropiadas
View(Juntarx)
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"),
read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"),
read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"),
read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
colnames(Juntarx) <- Titulo$V2
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
#Parte4) Etiquetas apropiadas
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
colnames(data) <- gsub("t", "Time", colnames(data))
colnames(data) <- gsub("f", "Frequency", colnames(data))
colnames(data) <- gsub("\\(\\)", "", colnames(data))
colnames(data) <- gsub("-", "", colnames(data))
colnames(data) <- gsub("BodyBody", "Body", colnames(data))
colnames(data) <- gsub("^", "MeanOf", colnames(data))
View(data)
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
colnames(data) <- gsub("t", "Time", colnames(data))
colnames(data) <- gsub("f", "Frequency", colnames(data))
colnames(data) <- gsub("\\(\\)", "", colnames(data))
colnames(data) <- gsub("-", "", colnames(data))
colnames(data) <- gsub("BodyBody", "Body", colnames(data))
colnames(data) <- gsub("^", "MeanOf", colnames(data))
data <- cbind(Voluntario = voluntarios,Actividad = actividades,data)
View(data)
data <-rbind(read.table("./Caso3/train/X_train.txt"),read.table("./Caso3/test/x_test.txt"))
actividades <- rbind(read.table("./Caso3/train/y_train.txt"),read.table("./Caso3/test/y_test.txt"))[,1]
encabezados <- read.table("./Caso3/features.txt")
labels <- as.character(read.table("./Caso3/activity_labels.txt")[,2])
voluntarios <- rbind(read.table("./Caso3/train/subject_train.txt"),read.table("./Caso3/test/subject_test.txt"))[,1]
colnames(data) <- encabezados$V2
medidas <- grepl('-(mean|std)\\(',encabezados$V2)
data <- data[medidas]
actividades <- labels[actividades]
colnames(data) <- gsub("mean", "Mean", colnames(data))
colnames(data) <- gsub("std", "Std", colnames(data))
colnames(data) <- gsub("t", "Time", colnames(data))
colnames(data) <- gsub("f", "Frequency", colnames(data))
colnames(data) <- gsub("\\(\\)", "", colnames(data))
colnames(data) <- gsub("-", "", colnames(data))
colnames(data) <- gsub("BodyBody", "Body", colnames(data))
colnames(data) <- gsub("^", "MeanOf", colnames(data))
data <- cbind(Voluntario = voluntarios,Actividad = actividades,data)
setwd("C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3")
files = list.files(path="C:/Users/Aaron/Documents/GitHub/ProgramacionActuarial3/Caso3/test", pattern=".txt")
#Parte1) Juntar Datos
Juntarx = rbind(read.table("./Caso3/train/X_train.txt"),
read.table("./Caso3/test/X_test.txt"))
Juntary = rbind(read.table("./Caso3/train/y_train.txt"),
read.table("./Caso3/test/y_test.txt"))[,1]
JuntarSub = rbind(read.table("./Caso3/train/subject_train.txt"),
read.table("./Caso3/test/subject_test.txt"))
Titulo = read.table("./Caso3/features.txt")
#Parte2) Solo media y desviacion std
colnames(Juntarx) <- Titulo$V2
Mediastd = grepl('-(mean|std)\\(', Titulo$V2)
Juntarx = Juntarx[Mediastd]
#Parte3)
Act = as.character(read.table("./Caso3/activity_labels.txt")[,2])
Juntary = Act[Juntary]
#Parte4) Etiquetas apropiadas
View(Juntarx)
View(data)
colnames(Juntarx) = Cambio
Cambio = gsub("-", " - ", Cambio)
cambio = colnames(Juntarx)
cambio = gsub("-", " - ", ambio)
cambio = gsub("-", " - ", cambio)
cambio
cambio = colnames(Juntarx)
cambio
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio
cambio = gsub("mean", "Media", cambio)
cambio = gsub("std", "Desviación", cambio)
cambio
cambio = gsub("\\(\\)", "", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\(\\)", "", cambio)
cambio
cambio = colnames(Juntarx)
cambio
cambio = colnames(Juntarx)
cambio = gsub("()", "", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("(\\)", "", cambio)
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\()", "", cambio)
cambio = colnames(Juntarx)
cambio
cambio = gsub("\\()", "", cambio)
cambio
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio
cambio = gsub("\\-", " - ", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio
cambio = gsub("\\-", " -", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio = gsub("t", "T", cambio)
cambio = gsub("f", "F", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio
cambio = gsub(c("t","f"), c("T","F"), cambio)
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio = gsub("t", "T", cambio)
cambio = gsub("f", "F", cambio)
cambio
colnames(Juntarx) = cambio
View(Juntarx)
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio = gsub("t", "T", cambio)
cambio = gsub("f", "F", cambio)
colnames(Juntarx) = cambio
Sujeto = JuntarSub
Acción = Juntary
Final = cbind(Sujeto, Acción, Juntarx)
View(Final)
View(data)
?cbind
View(Sujeto)
Sujeto = JuntarSub
colnames(Sujeto) = "Sujeto"
Acción = Juntary
Final = cbind(Sujeto, Acción, Juntarx)
View(Final)
library(taRifx)
?split
View(Final)
sapply(split(Final, Final$Acción),mean)
sapply(split(Final[2:68], Final$Acción),mean)
sapply(split(Final, Final$Acción),mean)
by(Final,Final$Acción,mean)
?by
by(Final[2],Final$Acción,mean)
by(Final[1],Final$Acción,mean)
by(Final[3],Final$Acción,mean)
by(Final,Final$Acción,mean)
Summary(Final)
summary(Final)
?melt
aggregate(d[, 3:68], list(Final$Acción), mean)
aggregate(Final[, 3:68], list(Final$Acción), mean)
summary(Final)
aggregate(Final[, 3:68], list(Final$Acción), mean)
si = aggregate(Final[, 3:68], list(Final$Acción), mean)
View(si)
